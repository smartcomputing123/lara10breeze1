{
  "manifest": {
    "name": "vite-plugin-full-reload",
    "description": "Reload the page when files are modified",
    "version": "1.0.5",
    "license": "MIT",
    "author": {
      "name": "M√°ximo Mussini",
      "email": "maximomussini@gmail.com"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/ElMassimo/vite-plugin-full-reload"
    },
    "homepage": "https://github.com/ElMassimo/vite-plugin-full-reload",
    "bugs": {
      "url": "https://github.com/ElMassimo/vite-plugin-full-reload/issues"
    },
    "files": [
      "dist"
    ],
    "type": "module",
    "main": "./dist/index.cjs",
    "module": "./dist/index.js",
    "types": "./dist/index.d.ts",
    "exports": {
      ".": {
        "require": "./dist/index.cjs",
        "import": "./dist/index.js",
        "types": "./dist/index.d.ts"
      }
    },
    "keywords": [
      "vite",
      "plugin",
      "vite-plugin",
      "vitejs",
      "full",
      "reload"
    ],
    "dependencies": {
      "picocolors": "^1.0.0",
      "picomatch": "^2.3.1"
    },
    "peerDependencies": {
      "vite": "^2 || ^3 || ^4"
    },
    "devDependencies": {
      "@antfu/eslint-config": "*",
      "@types/cross-spawn": "^6.0.2",
      "@types/node": "^14.18.22",
      "@types/picomatch": "^2.3.0",
      "conventional-changelog-cli": "^2.2.2",
      "cross-spawn": "^7.0.3",
      "enquirer": "^2.3.6",
      "eslint": "^8.20.0",
      "husky": "^5.2.0",
      "lint-staged": "^10.5.4",
      "minimist": "^1.2.6",
      "pinst": "^2.1.6",
      "rollup": "^2.77.0",
      "semver": "^7.3.7",
      "tsup": "^6.1.3",
      "typescript": "^4.7.4",
      "vite": "^4.0.0",
      "vitest": "^0.21.1"
    },
    "lint-staged": {
      "*.{js,ts,tsx,jsx,vue}": [
        "eslint --fix"
      ]
    },
    "eslintConfig": {
      "extends": [
        "@antfu/eslint-config"
      ],
      "rules": {
        "@typescript-eslint/space-before-function-paren": [
          "warn",
          "always"
        ]
      }
    },
    "scripts": {
      "clean": "rm -rf ./dist",
      "dev": "npm run build -- --watch",
      "build": "tsup src/index.ts --dts --format cjs,esm --clean",
      "lint": "eslint . --ext .ts,.js,.vue",
      "_postinstall": "husky install",
      "changelog": "conventional-changelog -p angular -i CHANGELOG.md -s",
      "release": "node scripts/release.cjs",
      "test": "vitest"
    },
    "_registry": "npm",
    "_loc": "/var/www/.home/.cache/yarn/v6/npm-vite-plugin-full-reload-1.0.5-6cddfa94e51909843bc7156ab728dbac972b8560-integrity/node_modules/vite-plugin-full-reload/package.json",
    "readmeFilename": "README.md",
    "readme": "<h2 align='center'><samp>vite-plugin-full-reload</samp></h2>\n\n<p align='center'>Automatically reload the page when files are modified</p>\n\n<p align='center'>\n  <a href='https://www.npmjs.com/package/vite-plugin-full-reload'>\n    <img src='https://img.shields.io/npm/v/vite-plugin-full-reload?color=222&style=flat-square'>\n  </a>\n  <a href='https://github.com/ElMassimo/vite-plugin-full-reload/blob/main/LICENSE.txt'>\n    <img src='https://img.shields.io/badge/license-MIT-blue.svg'>\n  </a>\n</p>\n\n<br>\n\n[vite-plugin-full-reload]: https://github.com/ElMassimo/vite-plugin-full-reload\n[vite-plugin-live-reload]: https://github.com/arnoson/vite-plugin-live-reload\n[Vite Ruby]: https://github.com/ElMassimo/vite_ruby\n[JS From Routes]: https://github.com/ElMassimo/js_from_routes\n[picomatch]: https://github.com/micromatch/picomatch#globbing-features\n\n## Why? ü§î\n\nWhen using _[Vite Ruby]_, I wanted to see changes to server-rendered layouts and templates without having to manually reload the page.\n\nAlso, in _[JS From Routes]_ path helpers are generated when Rails reload is triggered.\n\nTriggering a page reload when `config/routes.rb` is modified makes the DX very smooth.\n\n## Installation üíø\n\nInstall the package as a development dependency:\n\n```bash\nnpm i -D vite-plugin-full-reload # yarn add -D vite-plugin-full-reload\n```\n\n## Usage üöÄ\n\nAdd it to your plugins in `vite.config.ts`\n\n```ts\nimport { defineConfig } from 'vite'\nimport FullReload from 'vite-plugin-full-reload'\n\nexport default defineConfig({\n  plugins: [\n    FullReload(['config/routes.rb', 'app/views/**/*'])\n  ],\n})\n```\n\nThis is useful to trigger a page refresh for files that are not being imported, such as server-rendered templates.\n\nTo see which file globbing options are available, check [picomatch].\n\n## Configuration ‚öôÔ∏è\n\nThe following options can be provided:\n\n- <kbd>root</kbd>\n  \n  Files will be resolved against this directory.\n\n  __Default:__ `process.cwd()`\n\n  ``` js\n  FullReload('config/routes.rb', { root: __dirname }),\n  ``` \n\n- <kbd>delay</kbd>\n\n  How many milliseconds to wait before reloading the page after a file change.\n  It can be used to offset slow template compilation in Rails.\n\n  __Default:__ `0`\n  \n  ```js\n  FullReload('app/views/**/*', { delay: 100 })\n  ``` \n\n- <kbd>always</kbd>\n\n  Whether to refresh the page even if the modified HTML file is not currently being displayed.\n\n  __Default:__ `true`\n  \n  ```js\n  FullReload('app/views/**/*', { always: false })\n  ``` \n\n## Acknowledgements\n\n- <kbd>[vite-plugin-live-reload]</kbd>\n\n  This is a nice plugin, I found it right before publishing this one.\n\n  I've made [two](https://github.com/arnoson/vite-plugin-live-reload/pull/3) [PRs](https://github.com/arnoson/vite-plugin-live-reload/pull/5) that were needed to support these use cases.\n\n  At this point in time they are very similar, except this library doesn't create another `chokidar` watcher.\n\n## License\n\nThis library is available as open source under the terms of the [MIT License](https://opensource.org/licenses/MIT).\n",
    "licenseText": "Copyright (c) 2021 M√°ximo Mussini\n\nMIT License\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/vite-plugin-full-reload/-/vite-plugin-full-reload-1.0.5.tgz#6cddfa94e51909843bc7156ab728dbac972b8560",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/vite-plugin-full-reload/-/vite-plugin-full-reload-1.0.5.tgz",
    "hash": "6cddfa94e51909843bc7156ab728dbac972b8560",
    "integrity": "sha512-kVZFDFWr0DxiHn6MuDVTQf7gnWIdETGlZh0hvTiMXzRN80vgF4PKbONSq8U1d0WtHsKaFODTQgJeakLacoPZEQ==",
    "registry": "npm",
    "packageName": "vite-plugin-full-reload",
    "cacheIntegrity": "sha512-kVZFDFWr0DxiHn6MuDVTQf7gnWIdETGlZh0hvTiMXzRN80vgF4PKbONSq8U1d0WtHsKaFODTQgJeakLacoPZEQ== sha1-bN36lOUZCYQ7xxVqtyjbrJcrhWA="
  },
  "registry": "npm",
  "hash": "6cddfa94e51909843bc7156ab728dbac972b8560"
}